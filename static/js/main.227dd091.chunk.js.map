{"version":3,"sources":["components/library/library.module.css","components/shelf/shelf.module.css","components/book/book.module.css","components/search/searchInput/searchInput.module.css","components/search/search.module.css","icons/arrow-drop-down.svg","components/UI/modal.module.css","icons/add.svg","icons/arrow-back.svg","BooksAPI.js","components/UI/DropDownIcon.js","components/UI/Checkbox.js","components/UI/Modal.js","components/book/Book.js","components/shelf/Shelf.js","components/UI/Add.js","components/library/Library.js","components/UI/Back.js","components/search/searchInput/SearchInput.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","main","navbar","content","link","shelf","title","header","books","book","details","dropdown","search-container","search-books","back-button","results","container","__webpack_require__","p","modal","show-modal","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","update","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","dropDown","react_default","a","createElement","src","DropdownArrow","style","width","height","alt","checkbox","props","type","onChange","event","change","name","checked","checkboxes","modalShow","display","shelfNames","ref","className","classes","map","option","index","key","Checkbox","shelves","Book","state","CurrentlyReading","read","none","wantToRead","showModalHandler","_this","setState","onCheckboxSelect","target","keys","_this2","this","includes","defineProperty","_this3","imageLinks","thumbnail","authors","role","tabIndex","onClick","DropDownIcon","Modal","Component","renderValue","book_Book","getBooks","add","AddIcon","Library","currentlyReading","networkError","pending","updateBooks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","catch","error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","shelfs","textAlign","Fragment","Shelf","react_router_dom","to","Add","back","BackIcon","float","searchInput","Back","placeholder","updateQuery","Search","onUpdateQuery","trim","libbooks","libbook","length","SearchInput","React","App","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.227dd091.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"library_main__BX3gv\",\"navbar\":\"library_navbar__7EP6Y\",\"content\":\"library_content__1JBKp\",\"link\":\"library_link__1ZWZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shelf\":\"shelf_shelf__15eVK\",\"title\":\"shelf_title__26ILy\",\"header\":\"shelf_header__3wLMZ\",\"books\":\"shelf_books__pvNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"book_book__3a6ra\",\"details\":\"book_details__CoZWK\",\"dropdown\":\"book_dropdown__3eKLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"searchInput_search-container__2PjK9\",\"search-books\":\"searchInput_search-books__30INs\",\"back-button\":\"searchInput_back-button__3qWWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"search_results__jFpeP\",\"container\":\"search_container__2SQC7\"};","module.exports = __webpack_public_path__ + \"static/media/arrow-drop-down.9d4e3f36.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__tZHLq\",\"show-modal\":\"modal_show-modal__1hWUS\"};","module.exports = __webpack_public_path__ + \"static/media/add.75d390e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-back.20e8847d.svg\";","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport DropdownArrow from '../../icons/arrow-drop-down.svg';\r\n\r\nconst dropDown= ()=>{\r\n  return(\r\n    <img src={DropdownArrow} style={{width:'30px',height:'30px'}} alt={\"dropdown button\"}/>\r\n  )\r\n}\r\n\r\nexport default dropDown;\r\n","import React from 'react';\r\n\r\nconst checkbox =(props) => {\r\n  return(\r\n    <input type=\"checkbox\" onChange={(event)=>props.change(event)} name={props.name} checked={props.checked} />\r\n  )\r\n}\r\nexport default checkbox;\r\n","import React from 'react';\r\nimport classes from './modal.module.css';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst modal =(props)=> {\r\n  let style={};\r\n  let checkboxes=null\r\n  if(props){\r\n     style=props.modalShow?{display:'block'}:{display:'none'}\r\n  }\r\n  const options=['None','Read','want to Read','Currently Reading'];\r\n  const shelfNames=['none','read','wantToRead','currentlyReading'];\r\n  if(props){\r\n    if(props.checkboxes){\r\n      checkboxes=props.checkboxes;\r\n      return(\r\n        <div ref={modal} className={classes.modal} style={style}>\r\n          <ul>\r\n            {options.map((option,index)=>{\r\n              return (<li  key={index}><Checkbox change={props.change} name={shelfNames[index]} checked={checkboxes[shelfNames[index]]}/>{option}</li>)\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n}\r\nexport default modal;\r\n","import React, { Component } from 'react';\r\nimport classes from './book.module.css';\r\nimport DropDown from '../UI/DropDownIcon';\r\nimport Modal from '../UI/Modal';\r\n\r\nconst shelves=['currentlyReading','read','wantToRead']\r\nclass Book extends Component {\r\n\r\n  state={\r\n    modalShow:false,\r\n    checkboxes:{CurrentlyReading:false,read:false,none:false,wantToRead:false}\r\n  }\r\n  componentDidMount(){\r\n    /*\r\n    Add the correct state of the shelf for the book instance\r\n    */\r\n    if(!shelves.includes(this.props.book.shelf)){\r\n      this.setState(state=>({\r\n        checkboxes:{\r\n          ...state.checkboxes,\r\n          ['none']:true\r\n        }\r\n      }))\r\n      return\r\n    }\r\n    this.setState(state=>({\r\n      checkboxes:{\r\n        ...state.checkboxes,\r\n        [this.props.book.shelf]:true\r\n      }\r\n    }))\r\n  }\r\n  // Function to show modal that hold info about the shelve the book is currently on\r\n  showModalHandler=()=>{\r\n    this.setState(state=>({\r\n      modalShow:!state.modalShow\r\n    }))\r\n  }\r\n  //handler that controls when a checkbox is selected by ensuring only one checkbox is selected at a time\r\n  onCheckboxSelect=(event)=>{\r\n    const name=event.target.name;\r\n    let checkboxes=this.state.checkboxes;\r\n    Object.keys(checkboxes).map(key=>{\r\n      return checkboxes[key]=false;\r\n    })\r\n    checkboxes[name]=true\r\n    this.setState({\r\n      checkboxes:checkboxes\r\n    })\r\n    this.props.update(this.props.book,name)\r\n  }\r\n  render(){\r\n    return (\r\n\r\n        <div className={classes.book}>\r\n          <img src={this.props.book.imageLinks?this.props.book.imageLinks.thumbnail:''} alt={this.props.book.title?this.props.book.title:''}/>\r\n          <div className={classes.details}>\r\n            <p>{this.props.book.title?this.props.book.title:''}</p>\r\n            <p><strong>{this.props.book.authors?this.props.book.authors[0]:''}</strong></p>\r\n          </div>\r\n          <div className={classes.dropdown} role='button' tabIndex=\"0\" onClick={()=> this.showModalHandler()}><DropDown /></div>\r\n          <Modal  modalShow={this.state.modalShow} checkboxes={this.state.checkboxes} change={this.onCheckboxSelect}/>\r\n        </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Book;\r\n","import React  from 'react';\r\nimport classes from './shelf.module.css';\r\nimport Book from '../book/Book';\r\n\r\n\r\nconst shelf = (props) => {\r\n\r\n  let renderValue=null;\r\n  if(props.books){\r\n    renderValue=props.books.map(book=>{\r\n      return <Book getBooks={props.getBooks} update={props.update} key={book.id} book={book}/>\r\n      })\r\n  }\r\n  return(\r\n    <div className={classes.shelf}>\r\n      <div className={classes.header}><h3 className={classes.title}>{props.title}</h3></div>\r\n      <div className={classes.books}>\r\n        {renderValue}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default shelf;\r\n","import React from 'react';\r\nimport AddIcon from '../../icons/add.svg';\r\n\r\nconst add =() => {\r\n  return(\r\n    <img src={AddIcon} alt='Back Button' />\r\n  )\r\n}\r\nexport default add;\r\n","import React, { Component } from 'react';\r\nimport classes from './library.module.css';\r\nimport { getAll, update } from '../../BooksAPI';\r\nimport Shelf from '../shelf/Shelf';\r\nimport Add from '../UI/Add';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Library extends Component {\r\n  state={\r\n    currentlyReading:[],\r\n    read:[],\r\n    wantToRead:[],\r\n    networkError:false,\r\n    pending:true\r\n  }\r\n  updateBooks=(book,shelf)=>{\r\n    return update(book,shelf).then(res=>{\r\n      getAll().then(books=>{\r\n        let currentlyReading=[], read=[], wantToRead=[];\r\n        for(let book of books){\r\n          if(book.shelf==='read'){\r\n            read.push(book)\r\n          }\r\n          else if(book.shelf==='currentlyReading'){\r\n            currentlyReading.push(book)\r\n          }\r\n          else if(book.shelf==='wantToRead'){\r\n            wantToRead.push(book)\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          currentlyReading:currentlyReading,\r\n          read:read,\r\n          wantToRead:wantToRead\r\n        })\r\n      }).catch(error=>{\r\n        this.setState(state=>({\r\n          networkError:!state.networkError,\r\n          pending:!state.pending\r\n        }))\r\n      })\r\n\r\n    })\r\n  }\r\n  getBooks=()=>{\r\n    getAll().then(books=>{\r\n      let currentlyReading=[], read=[], wantToRead=[];\r\n      for(let book of books){\r\n        if(book.shelf==='read'){\r\n          read.push(book)\r\n        }\r\n        else if(book.shelf==='currentlyReading'){\r\n          currentlyReading.push(book)\r\n        }\r\n        else if(book.shelf==='wantToRead'){\r\n          wantToRead.push(book)\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        pending:!this.state.pending,\r\n        currentlyReading:currentlyReading,\r\n        read:read,\r\n        wantToRead:wantToRead\r\n      })\r\n    }).catch(error=>{\r\n      this.setState(state=>({\r\n        networkError:!state.networkError,\r\n        pending:!state.pending\r\n      }))\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getBooks()\r\n    }\r\n  render() {\r\n\r\n    let networkError,pending,shelfs;\r\n    if(this.state.pending){\r\n      pending=(<h3 style={{textAlign:'center'}}>Loading...</h3>);\r\n    }\r\n    else if(this.state.networkError){\r\n      networkError=(<h3 style={{textAlign:'center'}}>A network Error Occured!!! Check your internet connection and try again</h3>);\r\n    }\r\n    else if(!this.state.networkError && !this.state.pending){\r\n      shelfs=(\r\n            <React.Fragment>\r\n              <Shelf update={this.updateBooks} getBooks={this.getBooks} books={this.state.currentlyReading} title={'Currently Reading'}/>\r\n              <Shelf update={this.updateBooks} getBooks={this.getBooks} books={this.state.read} title={'Read'}/>\r\n              <Shelf update={this.updateBooks} getBooks={this.getBooks} books={this.state.wantToRead} title={'Want to Read'}/>\r\n            </React.Fragment>\r\n          )\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n      <div className={classes.main}>\r\n        <nav className={classes.navbar}>\r\n          <h2>My Library</h2>\r\n        </nav>\r\n        <div className={classes.content}>\r\n        {pending}\r\n        {networkError}\r\n        {shelfs}\r\n        </div>\r\n        <Link to=\"/search\"><div className={classes.link}><Add/></div></Link>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Library;\r\n","import React from 'react';\r\nimport BackIcon from '../../icons/arrow-back.svg';\r\n\r\nconst back =(props) => {\r\n  return(\r\n    <div className={props.classes}>\r\n      <img src={BackIcon} alt='Back Button' style={{width:'60px',height:'60px',float:'left'}}/>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default back;\r\n","import React from 'react';\r\nimport Back from '../../UI/Back';\r\nimport classes from './searchInput.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst searchInput = (props) => {\r\n  return(\r\n    <div className={classes['search-container']}>\r\n      <Link to=\"/\"><Back classes={classes['back-button']}/></Link>\r\n      <input value={props.query}  className={classes['search-books']} placeholder=\"Search Books\" onChange={(event)=> props.updateQuery(event)}/>\r\n    </div>\r\n  )\r\n}\r\nexport default searchInput;\r\n","import React from 'react';\r\nimport classes from './search.module.css';\r\nimport SearchInput from './searchInput/SearchInput';\r\nimport Book from '../book/Book';\r\nimport { search, update, getAll } from '../../BooksAPI';\r\n\r\n\r\nclass Search extends React.Component {\r\n  state={\r\n    query:'',\r\n    books:[],\r\n    networkError:false\r\n  }\r\n  onUpdateQuery=(event)=>{\r\n    let query=event.target.value;\r\n    this.setState({\r\n      query:query.trim()\r\n    })\r\n    search(this.state.query.trim()).then(books=>{\r\n      if(books===undefined || books.error) return\r\n\r\n      getAll().then(libbooks=>{\r\n        for(let book of books ){\r\n          for(let libbook of libbooks){\r\n            if(book.id===libbook.id){\r\n              book.shelf=libbook.shelf\r\n              break;\r\n            }\r\n            else(book.shelf='none')\r\n          }\r\n        }\r\n        this.setState({\r\n          books:books\r\n        })\r\n      })\r\n    })\r\n  }\r\n  render(){\r\n    let results=null;\r\n    let networkError//pending,shelfs;\r\n    //if(this.state.pending){\r\n    //  pending=(<h3 style={{textAlign:'center'}}>Loading...</h3>);\r\n    //}\r\n    if(this.state.networkError){\r\n      networkError=(<h3 style={{textAlign:'center'}}>A network Error Occured!!! Check your internet connection and try again</h3>);\r\n    }\r\n    if(this.state.query && this.state.books!==undefined && this.state.books.length!==0){\r\n      results=(<div className={classes.results}>{\r\n        this.state.books?this.state.books.map(book=>{\r\n          return <Book key={book.id} book={book} update={update}/>\r\n        }):''\r\n      }</div>)\r\n    }\r\n    return(\r\n\r\n      <div className={classes.container}>\r\n         <SearchInput query={this.state.query} updateQuery={this.onUpdateQuery}/>\r\n         {results}\r\n         {networkError}\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Library from './components/library/Library';\nimport { Route } from 'react-router-dom';\nimport Search from './components/search/Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\" component={Library}/>\n        <Route path=\"/search\" component={Search}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ( 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/myreads-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}